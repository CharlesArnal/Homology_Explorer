
New homological profile found : 1 10 10 1


New homological profile found : 1 9 9 1


New homological profile found : 6 8 8 6


New homological profile found : 6 9 9 6


New homological profile found : 1 14 14 1


New homological profile found : 3 9 9 3


New homological profile found : 3 13 13 3


New homological profile found : 2 10 10 2


New homological profile found : 1 11 11 1


New homological profile found : 1 16 16 1


New homological profile found : 1 8 8 1


New homological profile found : 1 7 7 1


New homological profile found : 3 8 8 3


New homological profile found : 1 13 13 1


New homological profile found : 7 8 8 7


New homological profile found : 1 12 12 1


New homological profile found : 1 15 15 1


New homological profile found : 2 11 11 2


New homological profile found : 4 9 9 4


New homological profile found : 2 9 9 2


New homological profile found : 2 8 8 2


New homological profile found : 1 6 6 1


New homological profile found : 1 5 5 1


New homological profile found : 5 9 9 5


New homological profile found : 8 9 9 8


New homological profile found : 9 7 7 9


New homological profile found : 8 8 8 8


New homological profile found : 4 10 10 4


New homological profile found : 3 11 11 3


New homological profile found : 3 10 10 3

Terminating...

-----
Starting optimization with optimizer TS_100_3000_3_25_50_False in experiment exp_1_TS_size_pop_triangs_TS_100_3000_3_25_50_False_homology_b0pab1_Dim.4.deg.4_4_4_seed_0

Traceback (most recent call last):
  File "/home/charles/Desktop/ML_RAG/Code/Discrete_optimization_exps/Exp_launcher.py", line 65, in <module>
    opti.optimize(exp_parameters["n_iter"], exp_parameters["dim"], exp_parameters["obj_function"][seed], initial_solutions = None, \
  File "/home/charles/Desktop/ML_RAG/Code/Discrete_Optimizers/Tabu_Search_Optimizer.py", line 213, in optimize
    self.population, self.current_scores = self.select_moves(possible_rewards, possible_moves)
  File "/home/charles/Desktop/ML_RAG/Code/Discrete_Optimizers/Tabu_Search_Optimizer.py", line 125, in select_moves
    index_best_move = np.argmax(set_of_rewards)
  File "<__array_function__ internals>", line 180, in argmax
  File "/home/charles/.local/lib/python3.10/site-packages/numpy/core/fromnumeric.py", line 1216, in argmax
    return _wrapfunc(a, 'argmax', axis=axis, out=out, **kwds)
  File "/home/charles/.local/lib/python3.10/site-packages/numpy/core/fromnumeric.py", line 54, in _wrapfunc
    return _wrapit(obj, method, *args, **kwds)
  File "/home/charles/.local/lib/python3.10/site-packages/numpy/core/fromnumeric.py", line 43, in _wrapit
    result = getattr(asarray(obj), method)(*args, **kwds)
ValueError: attempt to get argmax of an empty sequence
